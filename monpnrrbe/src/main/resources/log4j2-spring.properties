# Set to debug or trace if log4j initialization is failing
status = warn
 
# Name of the configuration
name = ConsoleLogConfigDemo
 
# Log files location
property.basePath = ./logs
log4j.category.org.springframework.jdbc.core = DEBUG
# Console appender configuration
appender.console.type = Console
appender.console.name = consoleLogger
appender.console.layout.type = PatternLayout
appender.console.layout.disableAnsi=false
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %highlight{${LOG_LEVEL_PATTERN:-%5p}}{FATAL=red, ERROR=red, WARN=yellow, INFO=green, DEBUG=green, TRACE=green} %style{%pid}{magenta} ---[monpnrrbe]  %style{%-40.40c{1.}}{cyan} : %m%n%ex
#https://stackoverflow.com/questions/21979699/log4j-2-adding-multiple-colors-to-console-appender
# RollingFileAppender name, pattern, path and rollover policy
appender.file1.type = RollingFile
appender.file1.name = file1Logger
appender.file1.fileName= ${basePath}/monpnrrbe.log
appender.file1.filePattern= ${basePath}/monpnrrbe_%d{yyyyMMdd}.log.gz
appender.file1.layout.type = PatternLayout
appender.file1.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %p %pid --- [monpnrrbe] %-40.40c{1.} : %m%n%ex
appender.file1.policies.type = Policies
appender.file1.policies.size.type = SizeBasedTriggeringPolicy
appender.file1.policies.size.size = 10MB
appender.file1.policies.time.type = TimeBasedTriggeringPolicy
appender.file1.policies.time.interval = 1
appender.file1.policies.time.modulate = true
appender.file1.strategy.type = DefaultRolloverStrategy
appender.file1.strategy.delete.type = Delete
appender.file1.strategy.delete.basePath = ${basePath}
appender.file1.strategy.delete.maxDepth = 10
appender.file1.strategy.delete.ifLastModified.type = IfLastModified
appender.file1.strategy.delete.ifLastModified.age = 30d
 
# Configure monpnrrbe logger
logger.monpnrrbe.name = monpnrrbe
logger.monpnrrbe.level = info
logger.monpnrrbe.appenderRef.a1.ref = consoleLogger
logger.monpnrrbe.appenderRef.a2.ref = file1Logger
logger.monpnrrbe.additivity=false
 
# Configure root logger
rootLogger.level = info
rootLogger.appenderRef.a1.ref = consoleLogger
rootLogger.appenderRef.a2.ref = file1Logger